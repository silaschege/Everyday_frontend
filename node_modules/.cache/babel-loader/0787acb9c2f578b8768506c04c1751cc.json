{"ast":null,"code":"var _jsxFileName = \"/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Login.js\";\nimport React from 'react';\nimport { Form, Input, Button, Spin, Checkbox } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport * as actions from '../store/action/auth';\nimport Icon from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst antIcon = /*#__PURE__*/_jsxDEV(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 17\n}, this);\n\nclass NormalLoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: ''\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.props.login(this.state.username, this.state.password);\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    if (this.props.isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    }\n\n    const {\n      username,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nNormalLoginForm.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);","map":{"version":3,"sources":["/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Login.js"],"names":["React","Form","Input","Button","Spin","Checkbox","connect","NavLink","Redirect","actions","Icon","PropTypes","antIcon","fontSize","NormalLoginForm","Component","state","username","password","onSubmit","e","preventDefault","props","login","onChange","setState","target","name","value","render","isAuthenticated","propTypes","func","isRequired","bool","mapStateToProps","loading","error","mapDispatchToProps","dispatch","onAuth","authLogin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAmCC,QAAnC,QAAmD,MAAnD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAiC,kBAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGA,MAAMC,OAAO,gBAAG,QAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAA5B;AAA8C,EAAA,IAAI;AAAlD;AAAA;AAAA;AAAA;AAAA,QAAhB;;AAGA,MAAMC,eAAN,SAA8Bd,KAAK,CAACe,SAApC,CAA8C;AAAA;AAAA;AAAA,SAC5CC,KAD4C,GACpC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADoC;;AAAA,SAW5CC,QAX4C,GAWhCC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWC,KAAX,CAAiB,KAAKP,KAAL,CAAWC,QAA5B,EAAsC,KAAKD,KAAL,CAAWE,QAAjD;AACD,KAd2C;;AAAA,SAgB5CM,QAhB4C,GAgBhCJ,CAAD,IAAO,KAAKK,QAAL,CAAc;AAAE,OAACL,CAAC,CAACM,MAAF,CAASC,IAAV,GAAiBP,CAAC,CAACM,MAAF,CAASE;AAA5B,KAAd,CAhB0B;AAAA;;AAkB5CC,EAAAA,MAAM,GAAE;AACN,QAAI,KAAKP,KAAL,CAAWQ,eAAf,EAAgC;AAC9B,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,UAAM;AAAEb,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyB,KAAKF,KAApC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA5B2C;;AAAxCF,e,CAMGiB,S,GAAY;AACjBR,EAAAA,KAAK,EAAEZ,SAAS,CAACqB,IAAV,CAAeC,UADL;AAEjBH,EAAAA,eAAe,EAAEnB,SAAS,CAACuB;AAFV,C;;AA0BrB,MAAMC,eAAe,GAAInB,KAAD,IAAW;AAC/B,SAAO;AACHoB,IAAAA,OAAO,EAAEpB,KAAK,CAACoB,OADZ;AAEHC,IAAAA,KAAK,EAAErB,KAAK,CAACqB;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHC,IAAAA,MAAM,EAAE,CAACvB,QAAD,EAAWC,QAAX,KAAwBqB,QAAQ,CAAC9B,OAAO,CAACgC,SAAR,CAAkBxB,QAAlB,EAA4BC,QAA5B,CAAD;AADrC,GAAP;AAGH,CAJD;;AAMA,eAAeZ,OAAO,CAAC6B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CxB,eAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, Spin,Checkbox } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink ,Redirect} from 'react-router-dom';\nimport * as actions from '../store/action/auth';\nimport Icon from '@ant-design/icons';\nimport PropTypes from 'prop-types';\n\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\nclass NormalLoginForm extends React.Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  static propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.login(this.state.username, this.state.password);\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render(){\n    if (this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n    const { username, password } = this.state;\n    return(\n      <div>\n        \n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);\n"]},"metadata":{},"sourceType":"module"}
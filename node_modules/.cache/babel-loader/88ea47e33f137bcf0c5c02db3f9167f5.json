{"ast":null,"code":"var _jsxFileName = \"/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Login.js\";\nimport React from 'react';\nimport { Form, Input, Button, Spin, Checkbox } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/action/auth';\nimport Icon from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormItem = Form.Item;\n\nconst antIcon = /*#__PURE__*/_jsxDEV(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 17\n}, this);\n\nclass NormalLoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.onAuth(values.userName, values.password);\n          this.props.history.push('/');\n        }\n      });\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    } // const { getFieldDecorator } = this.props.form;\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [errorMessage, this.props.loading ? /*#__PURE__*/_jsxDEV(Spin, {\n        indicator: antIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        initialValues: {\n          remember: true\n        } // onFinish={onFinish}\n        // onFinishFailed={onFinishFailed}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Username\",\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: 'Please input your username!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: 'Please input your password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"remember\",\n          valuePropName: \"checked\",\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }, this), \"Or\", /*#__PURE__*/_jsxDEV(NavLink, {\n            style: {\n              marginRight: '10px'\n            },\n            to: \"/signup/\",\n            children: \" signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n\n} // const WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);","map":{"version":3,"sources":["/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Login.js"],"names":["React","Form","Input","Button","Spin","Checkbox","connect","NavLink","actions","Icon","FormItem","Item","antIcon","fontSize","NormalLoginForm","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","onAuth","userName","password","history","push","render","errorMessage","error","message","loading","span","remember","required","offset","marginRight","mapStateToProps","state","mapDispatchToProps","dispatch","username","authLogin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, Spin,Checkbox } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/action/auth';\nimport Icon from '@ant-design/icons';\n\nconst FormItem = Form.Item;\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.userName, values.password);\n        this.props.history.push('/');\n      }\n    });\n  }\n\n  render() {\n    let errorMessage = null;\n    if (this.props.error) {\n        errorMessage = (\n            <p>{this.props.error.message}</p>\n        );\n    }\n\n    // const { getFieldDecorator } = this.props.form;\n    return (\n        <div>\n            {errorMessage}\n            {\n                this.props.loading ?\n\n                <Spin indicator={antIcon} />\n\n                :\n\n                <Form\n      name=\"basic\"\n      labelCol={{\n        span: 8,\n      }}\n      wrapperCol={{\n        span: 16,\n      }}\n      initialValues={{\n        remember: true,\n      }}\n      // onFinish={onFinish}\n      // onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your username!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"remember\"\n        valuePropName=\"checked\"\n        wrapperCol={{\n          offset: 8,\n          span: 16,\n        }}\n      >\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item>\n\n      <Form.Item\n        wrapperCol={{\n          offset: 8,\n          span: 16,\n        }}\n      >\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n        Or \n                    <NavLink \n                        style={{marginRight: '10px'}} \n                        to='/signup/'> signup\n                    </NavLink>\n      </Form.Item>\n    </Form>\n            }\n      </div>\n    );\n  }\n}\n\n// const WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Login.js\";\nimport React from 'react';\nimport { Form, Input, Button, Spin, Checkbox } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { login } from '../store/action/auth';\nimport Icon from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst antIcon = /*#__PURE__*/_jsxDEV(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 17\n}, this);\n\nclass NormalLoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Username: '',\n      Password: ''\n    };\n    this.PropTypes = {\n      login: PropTypes.func.isRequired,\n      isAuthenticated: PropTypes.bool\n    };\n\n    this.handleChange = e => {};\n\n    this.handleSubmit = e => {};\n  }\n\n  render() {\n    if (this.props.isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    }\n\n    const {\n      Username,\n      Password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleSubmit,\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        initialValues: {\n          remember: true\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Username\",\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: 'Please input your username!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            name: \"Username\",\n            placeholder: \"Put a username here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: 'Please input your password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            name: \"Password\",\n            placeholder: \"Put a password here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"remember\",\n          valuePropName: \"checked\",\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this), \"Or\", /*#__PURE__*/_jsxDEV(NavLink, {\n            style: {\n              marginRight: '10px'\n            },\n            to: \"/signup/\",\n            children: \"signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  var _state$auth;\n\n  return {\n    isAuthenticated: (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : _state$auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login\n})(NormalLoginForm);","map":{"version":3,"sources":["/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Login.js"],"names":["React","Form","Input","Button","Spin","Checkbox","connect","NavLink","Redirect","login","Icon","PropTypes","antIcon","fontSize","NormalLoginForm","Component","state","Username","Password","func","isRequired","isAuthenticated","bool","handleChange","e","handleSubmit","render","props","span","remember","required","message","offset","marginRight","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, Spin,Checkbox } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink ,Redirect} from 'react-router-dom';\nimport { login } from '../store/action/auth';\nimport Icon from '@ant-design/icons';\nimport PropTypes from 'prop-types';\n\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\nclass NormalLoginForm extends React.Component {\n  state = {\n    Username: '',\n    Password: '',\n  };\n\n  PropTypes= {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n  };\n\n  handleChange = (e) => {\n\n  }\n\n\n  handleSubmit = (e) => {\n\n  }\n\n\n\n\n\n\n  render(){\n    if (this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n    const { Username, Password } = this.state;\n    return(\n      <div>\n        <Form onSubmit={this.handleSubmit} name=\"basic\" labelCol={{span: 8,}} wrapperCol={{span: 16,}} initialValues={{remember: true, }}>\n\n          <Form.Item label=\"Username\" name=\"username\" rules={[{required: true,message: 'Please input your username!', },]}>\n          <Input name=\"Username\" placeholder=\"Put a username here\"/>\n          </Form.Item>\n\n          <Form.Item label=\"Password\" name=\"password\" rules={[{required: true,message: 'Please input your password!',},]}>\n          <Input.Password name=\"Password\" placeholder=\"Put a password here\"/>\n          </Form.Item>\n\n        <Form.Item name=\"remember\" valuePropName=\"checked\"  wrapperCol={{offset: 8, span: 16,}}>\n        <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Form.Item wrapperCol={{offset: 8,span: 16,}}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n          Or \n        <NavLink style={{marginRight: '10px'}} to='/signup/'> \n          signup\n        </NavLink>\n        </Form.Item>\n\n      </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth?.isAuthenticated,\n});\n\n\nexport default connect(mapStateToProps,{login})(NormalLoginForm);\n"]},"metadata":{},"sourceType":"module"}
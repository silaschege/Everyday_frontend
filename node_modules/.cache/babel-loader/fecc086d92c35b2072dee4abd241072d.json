{"ast":null,"code":"var _jsxFileName = \"/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Spin, Checkbox } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect, useHistory } from 'react-router-dom';\nimport { login } from '../store/action/auth';\nimport Icon from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst antIcon = /*#__PURE__*/_jsxDEV(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 17\n}, this);\n\nfunction NormalLoginForm() {\n  _s();\n\n  const [Username, setUsername] = useState(\" \");\n  const [Password, setPassword] = useState(\" \");\n  const history = useHistory();\n  useEffect(() => {\n    if (localStorage.getItem('user-info')) {\n      history.push(\"/\");\n    }\n  }, []);\n\n  async function loginmaster() {\n    let item = {\n      Username,\n      Password\n    };\n    let result = await fetch(\"http://127.0.0.1:8000/api-auth/login/\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(item)\n    });\n    result = result.json();\n    localStorage.setItem(JSON.stringify(result));\n    history.push(\"/logout\");\n  } // render(){\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      initialValues: {\n        remember: true\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"Username\",\n          placeholder: \"Put a username here\",\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          name: \"Password\",\n          placeholder: \"Put a password here\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"remember\",\n        valuePropName: \"checked\",\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: loginmaster,\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), \"Or\", /*#__PURE__*/_jsxDEV(NavLink, {\n          style: {\n            marginRight: '10px'\n          },\n          to: \"/signup/\",\n          children: \"signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this); // }\n}\n\n_s(NormalLoginForm, \"xexjbJ2tlk/eTbRbpnsxcRqgdIY=\", false, function () {\n  return [useHistory];\n});\n\n_c = NormalLoginForm;\n\nconst mapStateToProps = state => {\n  var _state$auth;\n\n  return {\n    isAuthenticated: (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : _state$auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login\n})(NormalLoginForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"NormalLoginForm\");","map":{"version":3,"sources":["/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Login.js"],"names":["React","useState","useEffect","Form","Input","Button","Spin","Checkbox","connect","NavLink","Redirect","useHistory","login","Icon","PropTypes","antIcon","fontSize","NormalLoginForm","Username","setUsername","Password","setPassword","history","localStorage","getItem","push","loginmaster","item","result","fetch","method","headers","body","JSON","stringify","json","setItem","span","remember","required","message","e","target","value","offset","marginRight","mapStateToProps","state","isAuthenticated","auth"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { Form, Input, Button, Spin,Checkbox } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink ,Redirect,useHistory} from 'react-router-dom';\nimport { login } from '../store/action/auth';\nimport Icon from '@ant-design/icons';\nimport PropTypes from 'prop-types';\n\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nfunction NormalLoginForm () {\n  \n  const [Username,setUsername]=useState(\" \");\n  const [Password,setPassword]=useState(\" \");\n  const history =useHistory();\n\n  useEffect(() => {\n    if (localStorage.getItem('user-info')){\n      history.push(\"/\")\n    }\n    \n  }, []) \n  \n\n  async function loginmaster() {\n    let item ={Username,Password}\n    let result= await fetch(\"http://127.0.0.1:8000/api-auth/login/\",{\n      method:'POST',\n      headers:{\n        \"Content-Type\":\"application/json\",\n        \"Accept\":\"application/json\"\n      },\n      body:JSON.stringify(item)\n    });\n    result= result.json();\n    localStorage.setItem(JSON.stringify(result))\n    history.push(\"/logout\")\n  }\n  \n\n  // render(){\n    return(\n      <div>\n        <Form name=\"basic\" labelCol={{span: 8,}} wrapperCol={{span: 16,}} initialValues={{remember: true, }}>\n\n          <Form.Item label=\"Username\" name=\"username\" rules={[{required: true,message: 'Please input your username!', },]}>\n          <Input name=\"Username\" placeholder=\"Put a username here\" \n          onChange={(e)=>setUsername(e.target.value)}/>\n          </Form.Item>\n\n          <Form.Item label=\"Password\" name=\"password\" rules={[{required: true,message: 'Please input your password!',},]}>\n          <Input.Password name=\"Password\" placeholder=\"Put a password here\" \n          onChange={(e)=>setPassword(e.target.value)}\n          />\n          </Form.Item>\n\n        <Form.Item name=\"remember\" valuePropName=\"checked\"  wrapperCol={{offset: 8, span: 16,}}>\n        <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Form.Item wrapperCol={{offset: 8,span: 16,}}>\n        <Button onClick={loginmaster} type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n          Or \n        <NavLink style={{marginRight: '10px'}} to='/signup/'> \n          signup\n        </NavLink>\n        </Form.Item>\n\n      </Form>\n      </div>\n    );\n  // }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth?.isAuthenticated,\n});\n\n\nexport default connect(mapStateToProps,{login})(NormalLoginForm);\n"]},"metadata":{},"sourceType":"module"}
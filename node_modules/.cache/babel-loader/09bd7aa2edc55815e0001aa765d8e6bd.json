{"ast":null,"code":"var _jsxFileName = \"/Users/silas/Documents/GitHub/everyday_frontend/src/components/hr_management/task/taskUpdateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport axiosInstance from \"../../connection\";\nimport { useHistory, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormItem = Form.Item;\nexport default function TaskUpdateForm() {\n  _s();\n\n  const history = useHistory();\n  const {\n    taskID\n  } = useParams();\n  const initialFormData = Object.freeze({\n    Task: '',\n    State: '',\n    From: ''\n  });\n  const [formData, updateFormData] = useState(initialFormData);\n  useEffect(() => {\n    axiosInstance.get(`hr/Task/${taskID}/`).then(res => {\n      updateFormData({ ...formData,\n        ['Task']: res.data.Task,\n        ['State']: res.data.State,\n        ['From']: res.data.From\n      });\n      console.log(res.data);\n    });\n  }, [updateFormData]);\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      // Trimming any whitespace\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n    axiosInstance.put(`hr/Task/${taskID}/`, {\n      Task: formData.Task,\n      State: formData.State,\n      From: formData.From\n    });\n    history.push({\n      pathname: `/task/${taskID}/`\n    });\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(FormItem, {\n        label: \"Task\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"Task\",\n          name: \"Task\",\n          label: \"Task\",\n          onChange: handleChange,\n          placeholder: \"Input a business  task here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n        label: \"State\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"State\",\n          name: \"State\",\n          label: \"State\",\n          onChange: handleChange,\n          placeholder: \"Input a business  state here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n        label: \"From\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"From\",\n          name: \"From\",\n          label: \"From\",\n          onChange: handleChange,\n          placeholder: \"Input a where a task is from here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"Blue\",\n          onClick: handleSubmit,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TaskUpdateForm, \"VP2PUm/CP4qCpYdTwhaorrBJqWU=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = TaskUpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskUpdateForm\");","map":{"version":3,"sources":["/Users/silas/Documents/GitHub/everyday_frontend/src/components/hr_management/task/taskUpdateForm.js"],"names":["React","useState","useEffect","Form","Input","Button","axiosInstance","useHistory","useParams","FormItem","Item","TaskUpdateForm","history","taskID","initialFormData","Object","freeze","Task","State","From","formData","updateFormData","get","then","res","data","console","log","handleChange","e","target","name","value","trim","handleSubmit","preventDefault","put","push","pathname","window","location","reload"],"mappings":"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","sourcesContent":["import React , { useState, useEffect } from \"react\";\nimport { Form, Input, Button} from \"antd\";\nimport axiosInstance from \"../../connection\";\nimport { useHistory, useParams} from 'react-router-dom';\n\n\n\nconst FormItem = Form.Item;\n\n\nexport default function TaskUpdateForm () {\n  \n  const history = useHistory();\n\tconst { taskID } = useParams();\n\tconst initialFormData = Object.freeze({\n\t\tTask : '',\n\t\tState: '',    \n\t\tFrom : '', \n\t});\n\n\tconst [formData, updateFormData] = useState(initialFormData);\n\n\tuseEffect(() => {\n\t\taxiosInstance.get(`hr/Task/${taskID}/`).then((res) => {\n\t\t\tupdateFormData({\n\t\t\t\t...formData,\n\t\t\t\t['Task']: res.data.Task,\n\t\t\t\t['State']: res.data.State,\n\t\t\t\t['From']: res.data.From,\n\t\t\t});\n\t\t\tconsole.log(res.data);\n\t\t});\n\t}, [updateFormData]);\n\n\tconst handleChange = (e) => {\n\t\tupdateFormData({\n\t\t\t...formData,\n\t\t\t// Trimming any whitespace\n\t\t\t[e.target.name]: e.target.value.trim(),\n\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(formData);\n\n\t\taxiosInstance.put(`hr/Task/${taskID}/`, {\n\t\t\tTask:formData.Task,\n\t\t\tState:formData.State,\n\t\t\tFrom:formData.From,\n\t\t});\n\t\thistory.push({\n\t\t\tpathname: `/task/${taskID}/`,\n\t\t});\n\t\twindow.location.reload();\n\t};\n\n\t\n\n    return (\n      <div>\n        <Form>\n\n        <FormItem label=\"Task\">\n            <Input \n            id=\"Task\"\n            name=\"Task\" \n\t\t\t      label=\"Task\"\n\t\t\t      onChange={handleChange}\n            placeholder=\"Input a business  task here\" \n            />\n          </FormItem>\n\n\n\n          <FormItem label=\"State\">\n            <Input \n            id=\"State\"\n            name=\"State\" \n\t\t\t      label=\"State\"\n\t\t\t      onChange={handleChange}\n            placeholder=\"Input a business  state here\" \n            />\n          </FormItem>\n\n          <FormItem label=\"From\">\n            <Input \n            id=\"From\"\n            name=\"From\" \n\t\t\t      label=\"From\"\n\t\t\t      onChange={handleChange}\n            placeholder=\"Input a where a task is from here\" \n            />\n          </FormItem>\n         \n\n          <FormItem>\n            <Button \n            type=\"submit\"\n\t\t\tcolor=\"Blue\"\n\t\t\tonClick={handleSubmit}\n            >\n            Update\n            </Button>\n          </FormItem>\n\n        </Form>\n      </div>\n    );\n  \n}\n\n\n"]},"metadata":{},"sourceType":"module"}
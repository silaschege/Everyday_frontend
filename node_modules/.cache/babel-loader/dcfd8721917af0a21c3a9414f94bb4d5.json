{"ast":null,"code":"var _jsxFileName = \"/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Signup.js\";\nimport React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/action/auth';\nimport Icon from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormItem = Form.Item;\n\nclass RegistrationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.props.onAuth(values.userName, values.email, values.password, values.confirm);\n          this.props.history.push('/');\n        }\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    this.validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormItem, {\n        children: getFieldDecorator('userName', {\n          rules: [{\n            required: true,\n            message: 'Please input your username!'\n          }]\n        })( /*#__PURE__*/_jsxDEV(Input, {\n          prefix: /*#__PURE__*/_jsxDEV(Icon, {\n            type: \"user\",\n            style: {\n              color: 'rgba(0,0,0,.25)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 32\n          }, this),\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n        children: getFieldDecorator('email', {\n          rules: [{\n            type: 'email',\n            message: 'The input is not valid E-mail!'\n          }, {\n            required: true,\n            message: 'Please input your E-mail!'\n          }]\n        })( /*#__PURE__*/_jsxDEV(Input, {\n          prefix: /*#__PURE__*/_jsxDEV(Icon, {\n            type: \"mail\",\n            style: {\n              color: 'rgba(0,0,0,.25)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 28\n          }, this),\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n        children: getFieldDecorator('password', {\n          rules: [{\n            required: true,\n            message: 'Please input your password!'\n          }, {\n            validator: this.validateToNextPassword\n          }]\n        })( /*#__PURE__*/_jsxDEV(Input, {\n          prefix: /*#__PURE__*/_jsxDEV(Icon, {\n            type: \"lock\",\n            style: {\n              color: 'rgba(0,0,0,.25)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 28\n          }, this),\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n        children: getFieldDecorator('confirm', {\n          rules: [{\n            required: true,\n            message: 'Please confirm your password!'\n          }, {\n            validator: this.compareToFirstPassword\n          }]\n        })( /*#__PURE__*/_jsxDEV(Input, {\n          prefix: /*#__PURE__*/_jsxDEV(Icon, {\n            type: \"lock\",\n            style: {\n              color: 'rgba(0,0,0,.25)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 28\n          }, this),\n          type: \"password\",\n          placeholder: \"Password\",\n          onBlur: this.handleConfirmBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), \"Or\", /*#__PURE__*/_jsxDEV(NavLink, {\n          style: {\n            marginRight: '10px'\n          },\n          to: \"/login/\",\n          children: \" login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const WrappedRegistrationForm = Form.create()(RegistrationForm);\n\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);","map":{"version":3,"sources":["/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Signup.js"],"names":["React","Form","Input","Button","connect","NavLink","actions","Icon","FormItem","Item","RegistrationForm","Component","state","confirmDirty","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","onAuth","userName","email","password","confirm","history","push","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","render","getFieldDecorator","rules","required","message","color","type","validator","marginRight","mapStateToProps","loading","error","mapDispatchToProps","dispatch","username","password1","password2","authSignup"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/action/auth';\nimport Icon from '@ant-design/icons';\n\nconst FormItem = Form.Item;\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.props.onAuth(\n            values.userName,\n            values.email,\n            values.password,\n            values.confirm\n        );\n        this.props.history.push('/');\n      }\n    });\n  }\n\n  handleConfirmBlur = (e) => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  }\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  }\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  }\n\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        \n        <FormItem>\n            {getFieldDecorator('userName', {\n                rules: [{ required: true, message: 'Please input your username!' }],\n            })(\n                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n            )}\n        </FormItem>\n        \n        <FormItem>\n          {getFieldDecorator('email', {\n            rules: [{\n              type: 'email', message: 'The input is not valid E-mail!',\n            }, {\n              required: true, message: 'Please input your E-mail!',\n            }],\n          })(\n            <Input prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\" />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [{\n              required: true, message: 'Please input your password!',\n            }, {\n              validator: this.validateToNextPassword,\n            }],\n          })(\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator('confirm', {\n            rules: [{\n              required: true, message: 'Please confirm your password!',\n            }, {\n              validator: this.compareToFirstPassword,\n            }],\n          })(\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" onBlur={this.handleConfirmBlur} />\n          )}\n        </FormItem>\n\n        <FormItem>\n        <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n            Signup\n        </Button>\n        Or \n        <NavLink \n            style={{marginRight: '10px'}} \n            to='/login/'> login\n        </NavLink>\n        </FormItem>\n\n      </Form>\n    );\n  }\n}\n\n// const WrappedRegistrationForm = Form.create()(RegistrationForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\n"]},"metadata":{},"sourceType":"module"}
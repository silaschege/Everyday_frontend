[{"/Users/silas/Documents/GitHub/everyday_frontend/src/index.js":"1","/Users/silas/Documents/GitHub/everyday_frontend/src/reportWebVitals.js":"2","/Users/silas/Documents/GitHub/everyday_frontend/src/App.js":"3","/Users/silas/Documents/GitHub/everyday_frontend/src/store/reducers/auth.js":"4","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Layout.js":"5","/Users/silas/Documents/GitHub/everyday_frontend/src/store/utility.js":"6","/Users/silas/Documents/GitHub/everyday_frontend/src/store/action/actionType.js":"7","/Users/silas/Documents/GitHub/everyday_frontend/src/routes.js":"8","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Login.js":"9","/Users/silas/Documents/GitHub/everyday_frontend/src/store/action/auth.js":"10","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Signup.js":"11","/Users/silas/Documents/GitHub/everyday_frontend/src/store/action/messages.js":"12","/Users/silas/Documents/GitHub/everyday_frontend/src/components/job_application/Job.js":"13","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/JobDetailView.js":"14","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/JobListView.js":"15","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/ApplicantListView.js":"16","/Users/silas/Documents/GitHub/everyday_frontend/src/components/job_application/Applicant.js":"17","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/ApplicantDetailView.js":"18","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/BusinessListView.js":"19","/Users/silas/Documents/GitHub/everyday_frontend/src/components/job_application/Applications.js":"20","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/ApplicationListView.js":"21","/Users/silas/Documents/GitHub/everyday_frontend/src/components/job_application/Business.js":"22","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/BusinessDetailView.js":"23","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/GuarantorListView.js":"24","/Users/silas/Documents/GitHub/everyday_frontend/src/components/job_application/Guarantor.js":"25","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/GuarantorDetailView.js":"26"},{"size":902,"mtime":1627124324552,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1627124324552,"results":"29","hashOfConfig":"28"},{"size":878,"mtime":1629359671173,"results":"30","hashOfConfig":"28"},{"size":1279,"mtime":1629296295122,"results":"31","hashOfConfig":"28"},{"size":2651,"mtime":1629453262236,"results":"32","hashOfConfig":"28"},{"size":131,"mtime":1627124324557,"results":"33","hashOfConfig":"28"},{"size":603,"mtime":1629295917094,"results":"34","hashOfConfig":"28"},{"size":1725,"mtime":1629453765159,"results":"35","hashOfConfig":"28"},{"size":2018,"mtime":1629359615586,"results":"36","hashOfConfig":"28"},{"size":2697,"mtime":1629296162402,"results":"37","hashOfConfig":"28"},{"size":3844,"mtime":1629359705736,"results":"38","hashOfConfig":"28"},{"size":316,"mtime":1629296758003,"results":"39","hashOfConfig":"28"},{"size":1076,"mtime":1629367990399,"results":"40","hashOfConfig":"28"},{"size":1731,"mtime":1629366308895,"results":"41","hashOfConfig":"28"},{"size":857,"mtime":1629366334188,"results":"42","hashOfConfig":"28"},{"size":727,"mtime":1629366704267,"results":"43","hashOfConfig":"28"},{"size":1083,"mtime":1629367959654,"results":"44","hashOfConfig":"28"},{"size":1003,"mtime":1629367852799,"results":"45","hashOfConfig":"28"},{"size":709,"mtime":1629452058986,"results":"46","hashOfConfig":"28"},{"size":1099,"mtime":1629451440566,"results":"47","hashOfConfig":"28"},{"size":733,"mtime":1629451868586,"results":"48","hashOfConfig":"28"},{"size":1102,"mtime":1629369868919,"results":"49","hashOfConfig":"28"},{"size":808,"mtime":1629452566951,"results":"50","hashOfConfig":"28"},{"size":758,"mtime":1629453140614,"results":"51","hashOfConfig":"28"},{"size":1085,"mtime":1629452788543,"results":"52","hashOfConfig":"28"},{"size":990,"mtime":1629453666097,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"po76j7",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/silas/Documents/GitHub/everyday_frontend/src/index.js",[],["114","115"],"/Users/silas/Documents/GitHub/everyday_frontend/src/reportWebVitals.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/App.js",["116"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css';\nimport * as actions from './store/action/auth';\n\nimport CustomLayout from './containers/Layout';\n\nclass App extends Component {\n\n  // componentDidMount() {\n  //   this.props.onTryAutoSignup();\n  // }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <CustomLayout {...this.props}>\n              <BaseRouter />\n          </CustomLayout>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onTryAutoSignup: () => dispatch(actions.authCheckState())\n//   }\n// }\n\nexport default connect(mapStateToProps)(App);","/Users/silas/Documents/GitHub/everyday_frontend/src/store/reducers/auth.js",["117"],"import {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n  } from '../action/actionType';\n  \n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null,\n  };\n  \n  export default function (state = initialState, action) {\n    switch (action.type) {\n      case USER_LOADING:\n        return {\n          ...state,\n          isLoading: true,\n        };\n      case USER_LOADED:\n        return {\n          ...state,\n          isAuthenticated: true,\n          isLoading: false,\n          user: action.payload,\n        };\n      case LOGIN_SUCCESS:\n      case REGISTER_SUCCESS:\n        localStorage.setItem('token', action.payload.token);\n        return {\n          ...state,\n          ...action.payload,\n          isAuthenticated: true,\n          isLoading: false,\n        };\n      case AUTH_ERROR:\n      case LOGIN_FAIL:\n      case LOGOUT_SUCCESS:\n      case REGISTER_FAIL:\n        localStorage.removeItem('token');\n        return {\n          ...state,\n          token: null,\n          user: null,\n          isAuthenticated: false,\n          isLoading: false,\n        };\n      default:\n        return state;\n    }\n  }","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Layout.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/store/utility.js",[],["118","119"],"/Users/silas/Documents/GitHub/everyday_frontend/src/store/action/actionType.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/routes.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Login.js",["120","121","122","123"],"import React from 'react';\nimport { Form, Input, Button, Spin,Checkbox } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink ,Redirect} from 'react-router-dom';\nimport { login } from '../store/action/auth';\nimport Icon from '@ant-design/icons';\nimport PropTypes from 'prop-types';\n\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\nclass NormalLoginForm extends React.Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  static propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.login(this.state.username, this.state.password);\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render(){\n    if (this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n    const { username, password } = this.state;\n    return(\n      <div>\n        <Form name=\"basic\" labelCol={{span: 8,}} wrapperCol={{span: 16,}} initialValues={{remember: true, }}>\n\n          <Form.Item label=\"Username\" name=\"username\" rules={[{required: true,message: 'Please input your username!', },]}>\n          <Input />\n          </Form.Item>\n\n          <Form.Item label=\"Password\" name=\"password\" rules={[{required: true,message: 'Please input your password!',},]}>\n          <Input.Password />\n          </Form.Item>\n\n        <Form.Item name=\"remember\" valuePropName=\"checked\"  wrapperCol={{offset: 8, span: 16,}}>\n        <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Form.Item wrapperCol={{offset: 8,span: 16,}}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n          Or \n        <NavLink style={{marginRight: '10px'}} to='/signup/'> \n          signup\n        </NavLink>\n        </Form.Item>\n\n      </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth?.isAuthenticated,\n});\n\n\nexport default connect(mapStateToProps,{login})(NormalLoginForm);\n","/Users/silas/Documents/GitHub/everyday_frontend/src/store/action/auth.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/containers/Signup.js",["124","125","126","127"],"import React from 'react';\nimport { Form, Input, Button,Checkbox } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/action/auth';\nimport Icon from '@ant-design/icons';\n\nconst FormItem = Form.Item;\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.props.onAuth(\n            values.userName,\n            values.email,\n            values.password,\n            values.confirm\n        );\n        this.props.history.push('/');\n      }\n    });\n  }\n\n  handleConfirmBlur = (e) => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  }\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  }\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      // form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  }\n\n\n  render() {\n    // const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form\n      name=\"basic\"\n      labelCol={{\n        span: 8,\n      }}\n      wrapperCol={{\n        span: 16,\n      }}\n      initialValues={{\n        remember: true,\n      }}\n      // onFinish={onFinish}\n      // onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your username!',\n          },\n        ]}\n      >\n        <Input />\n\n      </Form.Item>\n\n\n      <Form.Item\n        label=\"Email\"\n        name=\"eamil\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your email!',\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password2\"\n        name=\"password2\"\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!',\n          },\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"remember\"\n        valuePropName=\"checked\"\n        wrapperCol={{\n          offset: 8,\n          span: 16,\n        }}\n      >\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item>\n\n      <Form.Item\n        wrapperCol={{\n          offset: 8,\n          span: 16,\n        }}\n      >\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n        Or \n                    <NavLink \n                        style={{marginRight: '10px'}} \n                        to='/login/'> Login\n                    </NavLink>\n      </Form.Item>\n    </Form>\n    );\n  }\n}\n\n// // const WrappedRegistrationForm = Form.create()(RegistrationForm);\n\n// const mapStateToProps = (state) => {\n//     return {\n//         loading: state.loading,\n//         error: state.error\n//     }\n// }\n\n// const mapDispatchToProps = dispatch => {\n//     return {\n//         onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2)) \n//     }\n// }\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth?.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(RegistrationForm);\n","/Users/silas/Documents/GitHub/everyday_frontend/src/store/action/messages.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/components/job_application/Job.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/JobDetailView.js",["128","129"],"import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Button, Card } from \"antd\";\n// import CustomForm from \"../components/Form\";\n\n\nclass JobDetail extends React.Component {\n  state = {\n    job: {}\n  };\n\n\n  componentDidMount(){\n    const jobID = this.props.match.params.jobID;\n    axios.get(`http://127.0.0.1:8000/api_application/Listing/${jobID}/`).then(res => {\n      this.setState({\n        job: res.data\n      });\n    });\n  }\n\n  \n  handleDelete = event => {\n    event.preventDefault();\n    const jobID = this.props.match.params.jobID;\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${this.props.token}`\n    };\n\n    \n        // hr dahsboard\n  //   axios.delete(`http://127.0.0.1:8000/api_application/Listing/${jobID}/delete/`)\n  //   .then(res => {\n  //     if (res.status === 204) {\n  //       this.props.history.push(`/`);\n  //     }\n  //   })\n   };\n\n  render() {\n    return (\n      <div>\n        <Card title={this.state.job.Position}>\n          <p> Post:{this.state.job.Position} </p>\n         <p> Level of education:{this.state.job.Education_level} </p>\n        </Card>\n        {/* hr administrator */}\n        {/* <CustomForm\n          {...this.props}\n          token={this.props.token}\n          requestType=\"put\"\n          articleID={this.props.match.params.articleID}\n          btnText=\"Update\"\n        /> */}\n\n        {/* <form onSubmit={this.handleDelete}>\n          <Button type=\"danger\" htmlType=\"submit\">\n            Delete\n          </Button> */}\n       \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(JobDetail);\n","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/JobListView.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/ApplicantListView.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/components/job_application/Applicant.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/ApplicantDetailView.js",["130"],"import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Button, Card } from \"antd\";\n\n\n\nclass ApplicantDetail extends React.Component {\n  state = {\n    applicant: {}\n  };\n\n\n  componentDidMount(){\n    const applicantID = this.props.match.params.applicantID;\n    axios.get(`http://127.0.0.1:8000/api_application/Applicant/${applicantID}/`).then(res => {\n      this.setState({\n        applicant: res.data\n      });\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <Card title={this.state.applicant.First_name}>\n          <p> First_name:{this.state.applicant.First_name} </p>\n         <p> Last_name:{this.state.applicant.Last_name} </p>\n         <p> Level of education:{this.state.applicant.Level_of_Education} </p>\n         <p> Course:{this.state.applicant.Course} </p>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(ApplicantDetail);\n","/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/BusinessListView.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/components/job_application/Applications.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/ApplicationListView.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/components/job_application/Business.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/BusinessDetailView.js",["131"],"/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/GuarantorListView.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/components/job_application/Guarantor.js",[],"/Users/silas/Documents/GitHub/everyday_frontend/src/containers/job_application/GuarantorDetailView.js",["132"],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":6,"column":13,"nodeType":"139","messageId":"140","endLine":6,"endColumn":20},{"ruleId":"141","severity":1,"message":"142","line":19,"column":3,"nodeType":"143","endLine":57,"endColumn":4},{"ruleId":"133","replacedBy":"144"},{"ruleId":"135","replacedBy":"145"},{"ruleId":"137","severity":1,"message":"146","line":2,"column":31,"nodeType":"139","messageId":"140","endLine":2,"endColumn":35},{"ruleId":"137","severity":1,"message":"147","line":10,"column":7,"nodeType":"139","messageId":"140","endLine":10,"endColumn":14},{"ruleId":"137","severity":1,"message":"148","line":35,"column":13,"nodeType":"139","messageId":"140","endLine":35,"endColumn":21},{"ruleId":"137","severity":1,"message":"149","line":35,"column":23,"nodeType":"139","messageId":"140","endLine":35,"endColumn":31},{"ruleId":"137","severity":1,"message":"138","line":5,"column":13,"nodeType":"139","messageId":"140","endLine":5,"endColumn":20},{"ruleId":"137","severity":1,"message":"150","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":12},{"ruleId":"137","severity":1,"message":"151","line":8,"column":7,"nodeType":"139","messageId":"140","endLine":8,"endColumn":15},{"ruleId":"137","severity":1,"message":"152","line":45,"column":11,"nodeType":"139","messageId":"140","endLine":45,"endColumn":15},{"ruleId":"137","severity":1,"message":"153","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":16},{"ruleId":"137","severity":1,"message":"154","line":26,"column":11,"nodeType":"139","messageId":"140","endLine":26,"endColumn":16},{"ruleId":"137","severity":1,"message":"153","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":16},{"ruleId":"137","severity":1,"message":"153","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":16},{"ruleId":"137","severity":1,"message":"153","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":16},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["155"],["156"],"'Spin' is defined but never used.","'antIcon' is assigned a value but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'Icon' is defined but never used.","'FormItem' is assigned a value but never used.","'form' is assigned a value but never used.","'Button' is defined but never used.","'jobID' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]